name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black pylint

    - name: Lint web-app with black and pylint
      run: |
        cd web-app
        pip install -r requirements.txt
        black --check .
        pylint --disable=C0111,C0103,C0303 *.py

    - name: Lint machine-learning-client with black and pylint
      run: |
        cd machine-learning-client
        pip install -r requirements.txt
        black --check .
        pylint --disable=C0111,C0103,C0303 *.py

  test-web-app:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd web-app
        pip install -r requirements.txt
        pip install pytest pytest-flask pytest-cov
    - name: Test with pytest
      run: |
        cd web-app
        export TESTING=True
        python -m pytest --cov=. --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./web-app/coverage.xml
        flags: webapp
        fail_ci_if_error: false

  test-ml-client:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd machine-learning-client
        pip install -r requirements.txt
        pip install pytest pytest-cov
    - name: Test with pytest
      run: |
        cd machine-learning-client
        export TESTING=True
        python -m pytest --cov=. --cov-report=xml
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./machine-learning-client/coverage.xml
        flags: mlclient
        fail_ci_if_error: false

  build-and-test-docker:
    runs-on: ubuntu-latest
    needs: [test-web-app, test-ml-client]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build web-app container
      uses: docker/build-push-action@v4
      with:
        context: ./web-app
        push: false
        load: true
        tags: flappy-web:test
    - name: Build ml-client container
      uses: docker/build-push-action@v4
      with:
        context: ./machine-learning-client
        push: false
        load: true
        tags: flappy-ml-client:test
    - name: Test containers
      run: |
        # Verify containers were built successfully
        docker image ls | grep flappy-web
        docker image ls | grep flappy-ml-client
