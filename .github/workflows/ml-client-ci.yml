name: CI Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'machine-learning-client/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'machine-learning-client/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov black pylint
          pip install numpy tensorflow pymongo librosa python-dotenv joblib
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt
          fi

      - name: Lint machine-learning client with black and pylint
        working-directory: ./machine-learning-client
        run: |
          pylint *.py || true

      - name: Run formatter check
        working-directory: ./machine-learning-client
        run: |
          black --check client.py test_client.py
          pylint --disable=C0111,C0103,C0303 client.py test_client.py

  test_client:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        working-directory: ./machine-learning-client
        run: |
          pytest test_client.py --cov=Client --cov-report=xml

      - name: Check coverage threshold
        working-directory: ./machine-learning-client
        run: |
          coverage report --fail-under=80

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: mlclient
          fail_ci_if_error: false

  build-client-container:
    runs-on: ubuntu-latest
    needs: test_client
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build ML client Docker container
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: flappy-ml-client:test

      - name: Verify ML client image
        run: docker images | grep flappy-ml-client
