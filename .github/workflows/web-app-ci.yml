name: Web App CI

on:
  push:
    branches: [ main ]
    paths:
      - 'web-app/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'web-app/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        cd web-app
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-flask pytest-cov black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        cd web-app
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Format check with black
      run: |
        cd web-app
        black --check .
        
    - name: Test with pytest
      run: |
        cd web-app
        python -m pytest tests/ --cov=app --cov-report=xml --cov-report=term-missing
        
    - name: Verify coverage threshold
      run: |
        cd web-app
        python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); coverage = float(root.attrib['line-rate']) * 100; print(f'Coverage: {coverage:.2f}%'); assert coverage >= 80, f'Code coverage ({coverage:.2f}%) is below the required threshold (80%)'"
        
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./web-app/coverage.xml
        fail_ci_if_error: true